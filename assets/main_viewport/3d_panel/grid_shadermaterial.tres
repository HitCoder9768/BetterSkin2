[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://assets/main_viewport/3d_panel/default_skin.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded, blend_mix, depth_draw_alpha_prepass;


uniform bool use_grid = true;
uniform int grid_n = 64;
uniform float grid_thickness = 0.05;

uniform sampler2D tex: hint_albedo;
uniform vec4 grid_color: hint_color = vec4(1, 1, 1, 1);



void fragment(){
	float grid_offset = grid_thickness / 2.0;
	if(use_grid &&
		(fract(UV.x * float(grid_n) + grid_offset) <= grid_thickness ||
		fract(UV.y * float(grid_n) + grid_offset) <= grid_thickness)){
		ALBEDO.rgb = grid_color.rgb;
	}
	else{
		vec4 col = texture(tex, UV);
		ALBEDO = col.rgb;
		ALPHA = col.a;
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/use_grid = true
shader_param/grid_n = 64
shader_param/grid_thickness = 0.05
shader_param/grid_color = Color( 1, 1, 1, 1 )
shader_param/tex = ExtResource( 1 )
